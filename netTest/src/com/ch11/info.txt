RMI框架

创建一个简单地客户程序和服务器程序，客户端能调用服务器端的方法
在实际应用中，为了合理地分配软硬件资源，会把各种对象分布在不同的网络节点上，
这些对象之间能项目发送消息。


一个分布式对象模型中，一个对象不仅能被本地进程访问，还可以被远程进程访问，
就称为远程对象：如果一个对象只能被本地进程访问，就称为本地对象，为了保证各种对象之间可
靠地发送消息，该模型的实现系统通常使用TCP协议作为网络传输层的通信协议。

Tips
一个对象调用另一个对象的方法，按照面向对象的观点，可以理解为一个对象向另一个对象发送消息，如果两个
对象都运行在同一个进程中，则消息无须经过网络传输。如果两个对象分布在网络中不同的节点上，则消息需要经过
网络传输。


一般说来，远程对象都分布在服务器端，提供各种通用的服务。客户端则访问服务器端的远程对象，请求特定
的服务。如果实现这种分布式的对象模型呢？显然，不管采取何种方式，对象模型的实现系统都应该具备以下功能：
（1）把分布在不同节点上的对象之间发送的消息转换为字节序列，这一过程称为编组（marshalling）。
（2）通过套接字建立连接并且发送编组后的消息，即字节序列。
（3）处理网络连接或传输消息时出现的各种故障。
（4）为分布在不同节点上的对象提供分布式垃圾收集机制。
（5）为远程方法调用提供安全检查机制。
（6）服务器端运用多线程或非阻塞通信机制，确保远程对象具有很好的并发性能，能同时被多个客户访问。
（7）创建与特定问题领域相关的各种本地对象和远程对象。

由此可见，从头开发一个完善的分布式的软件系统很复杂，既要处理套接字连接、编组、分布式垃圾收集、安全检查和
并发性等问题，还要开发与实际问题领域相关的各种本地对象和远程对象。幸运的是，目前已经有一些现成的、成熟的分布式
对象模型的框架。

RMI（Remote Method Invoke）：JDK提供了一个完善的、简单易用的远程方法调用框架，它要求客户端与服务器端都是
java程序。

CORBA（Common Object Request Broker Architecture，通过对象请求代理体系结构）：分布式对象模型的通用框架，
允许用不同的语言编写的对象能彼此通信。

SOAP（simple object Access Protocol，简单对象访问协议）：允许异构的系统之间能彼此通信，以XML作为通信语言。一个
系统可以访问另一个系统对外公布的Web服务。

RMI框架封装了所有底层通信细节，并且解决了编组、分布式垃圾收集、安全检查和并发性等通用问题。有了现成的框架，开发人员就只需专注于
开发与特定问题领域相关的各种本地对象和远程对象了。

CORBA（Common Object Request Broker Architecture，通用对象请求代理体系结构）：分布式对象模型的通用框架，允许用不同
语言编写的对象能彼此通信。

SOAP（Simple Object Access Protocol，简单对象访问协议）：允许异构的系统之间能彼此通信，以XML作为通信语言。一个系统可以访问另
一个系统对外公布的Web服务，

RMI框架封装了所有底层通信细节，并且解决了编组、分布式垃圾收集、安全检查和并发性等通用问题。有了现成的框架，开发人员就只需专注于开发与特定问题领域相关的各种对象和远程对象了。




