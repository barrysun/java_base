多个线程访问共享数据

1、将共享变量封装在另外一个对象中，然后将这个对象逐一传递给各个Runnable对象
每个线程对共享数据的操作方法也分配到那个对象身上去完成，这样容易实现针对该数据
的各种操作的互斥和通信。
2、将这些Runnable对象作为某一个类中的内部类，共享数据作为这个外部类中的成员变量
每个线程对共享数据的操作方法也分配给外部类，以便实现对共享数据进行的各种操作的互斥和通信，
作为内部类的各个Runnable对象调用外部类的这些方法

3、上面两种方法的组合：将共享数据封装在另外一个对象中，每个线程对共享数据
的操作方法也分配到那个对象身上去完成，对象作为这个外部类中的成员变量或
方法中的局部变量，每个线程的Runnable对象作为外部类中的成员内部类或局部内部类。


4、总之，要同步互斥的几段代码组好是分别放在几个独立的方法中，这些方法再放在同一个类中，
这样比较容易实现它们之间的同步互斥和通信。
